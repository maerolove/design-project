---
description: ESPHome YAML Constructor Rules
globs:
alwaysApply: true
---

# ESPHome YAML Constructor Rules

## Основные правила

### 1. Обязательное чтение FILELIST
**ВСЕГДА ЧИТАТЬ ./FILELIST ПЕРЕД КАЖДОЙ ЗАДАЧЕЙ**
- Перед началом любой задачи обязательно прочитать файл `./FILELIST`
- Этот файл содержит актуальную информацию о структуре проекта
- Использовать информацию из FILELIST для понимания контекста и архитектуры

### 2. Создание файлов
**ВСЕГДА СПРАШИВАТЬ РАЗРЕШЕНИЕ НА СОЗДАНИЕ ФАЙЛОВ**
- Никогда не создавать файлы без явного разрешения пользователя
- Сначала спросить: "Могу ли я создать файл X в директории Y?" и дождаться подтверждения
- Это касается всех типов файлов: документация, код, конфигурация и т.д.

### 3. API Endpoints
- Бэкенд: `https://api.kolkhoz.io` (БЕЗ `/api` префикса!)
- Endpoints: `/validate`, `/compile`, `/status`, `/download` (прямые пути)
- НЕ использовать `/api/` префикс

### 4. Структура проекта
- Фронтенд: `/home/app/frontend/`
- Бэкенд: `/home/app/backend/`
- Документация: `/home/app/docs/`
- Production build: `/home/app/data/build/`

### 5. Тестирование
- **ВСЕГДА ИСПОЛЬЗОВАТЬ ТОЛЬКО СУЩЕСТВУЮЩИЕ ТЕСТЫ ИЛИ PLAYWRIGHT MCP**
- НЕ создавать временные скрипты, curl команды или ad hoc Python код
- Если существующие тесты не устраивают - предлагать план улучшений
- Проверять работу всех основных функций через pytest или Playwright
- Документировать результаты тестирования

### 6. Отладка и логи
- **ВСЕГДА СМОТРЕТЬ ЛОГИ ПРИ ПРОБЛЕМАХ**
- Использовать `sudo journalctl -u esphome-backend.service --lines=50` для просмотра логов бэкенда
- Анализировать ошибки в логах перед попытками исправления
- Проверять системные логи для понимания корневых причин проблем
- Использовать логи для диагностики проблем с базой данных, сервисами и API